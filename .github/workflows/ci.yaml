# ==================================================================================================
#     Header
# ==================================================================================================

name: ci
on:
  pull_request:
  push:
    branches:
      - master
      - dev

# ==================================================================================================
#     Jobs
# ==================================================================================================

jobs:
  run-test-case:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        # Need to specify the shell explicitly.
        # https://github.com/marketplace/actions/setup-miniconda#important
        # https://github.com/conda-incubator/setup-miniconda#use-a-default-shell
        shell: bash -el {0}

    # ==========================================================================
    #     Matrix
    # ==========================================================================

    strategy:
      fail-fast: false

      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          # - ubuntu-22.04
          # - ubuntu-20.04
          # - macos-12
          # - macos-11

        # Test cases as listed in test/cases/*.txt
        # We update them automatically when running the test/run.sh script, so that each time
        # we have and run a new test case, it also appears here. The script to run this update
        # is located in .github/workflows/update-cases.sh
        case:
          # CASES_BEGIN
          - test/cases/base
          - test/cases/calling-bcftools-1
          - test/cases/calling-bcftools-2
          - test/cases/_calling-bcftools-3
          - test/cases/calling-bcftools-3
          - test/cases/calling-bcftools-4
          - test/cases/calling-freebayes-1
          - test/cases/calling-freebayes-2
          - test/cases/calling-freebayes-3
          - test/cases/_calling-freebayes-4
          - test/cases/calling-haplotypecaller-1
          - test/cases/calling-haplotypecaller-2
          - test/cases/calling-haplotypecaller-3
          - test/cases/calling-haplotypecaller-4
          - test/cases/duplicates-dedup-1
          - test/cases/duplicates-dedup-2
          - test/cases/hafpipe-1
          - test/cases/hafpipe-2
          - test/cases/hafpipe-3
          - test/cases/hafpipe-4
          - test/cases/mapping-bowtie2-1
          - test/cases/mapping-bowtie2-2
          - test/cases/mapping-bwaaln-1
          - test/cases/mapping-bwaaln-2
          - test/cases/mapping-bwaaln-3
          - test/cases/mapping-bwaaln-4
          - test/cases/mapping-bwa-mem-1
          - test/cases/mapping-bwa-mem2-1
          - test/cases/mapping-bwa-mem2-2
          - test/cases/pileup-1
          - test/cases/trimming-adapterremoval-1
          - test/cases/trimming-adapterremoval-2
          - test/cases/trimming-adapterremoval-3
          - test/cases/trimming-cutadapt-1
          - test/cases/trimming-cutadapt-2
          - test/cases/trimming-fastp-1
          - test/cases/trimming-fastp-2
          - test/cases/trimming-fastp-3
          - test/cases/trimming-seqprep-1
          - test/cases/trimming-seqprep-2
          - test/cases/trimming-skewer-1
          - test/cases/trimming-skewer-2
          # CASES_END

    # ==========================================================================
    #     Steps
    # ==========================================================================

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          # We need mamba here already, otherwise we run into
          # https://github.com/conda-incubator/setup-miniconda/issues/262
          mamba-version: "*"
          environment-file: envs/grenepipe.yaml
          activate-environment: grenepipe

      # Manually create the conda env.
      # Not needed at the moment, as the above setup works fine. Keeping this here for reference.
      # - name: Install Conda Env
      #   shell: bash -el {0}
      #   run: |
      #     mamba env create -f envs/grenepipe.yaml -n grenepipe
      # The in the run step:
      # conda activate grenepipe

      - name: Run Test
        run: |
          ./test/run.sh ${{ matrix.case }}
